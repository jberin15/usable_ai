from tqdm.auto import tqdm
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
from scipy import stats
import seaborn as sns

# Load BRFSS data
df_survey = pd.read_csv(r"C:\Users\jberin\usable_ai\project\data\LLCP2023.csv")

# Preview
df_survey.head()

# Load mapping dictionary
df_map = pd.read_csv(r"C:\Users\jberin\usable_ai\project\data\2023_Mapping_Dictionary.csv")

# Create a dictionary of dictionaries: {column: {value: label}}
mapping_dict = {
    var: grp.set_index("Value")["Value_Label"].to_dict()
    for var, grp in df_map.groupby("Variable_Name")
}

# Make a copy of the original to preserve raw values if needed
df_survey_labeled = df_survey.copy()

# Apply the mapping to relevant columns
for col in df_survey.columns:
    if col in mapping_dict:
        df_survey_labeled[col] = df_survey[col].map(mapping_dict[col])

#print (df_survey_labeled)
df_survey_labeled.head()

# Isolate analysis to completed interviews only

df_completed = df_survey_labeled[df_survey_labeled['DISPCODE'] == 'Completed Interview']

# Count of people who reported having had a heart attack
mi_count = (df_completed['CVDINFR4'] == 'Yes').sum()

print(mi_count)

# Count of people who reported having kidney disease
kd_count = (df_completed['CHCKDNY2'] == 'Yes').sum()

print(kd_count)

# Count of people who reported both kidney disease and heart attack

dual_condition_count = ((df_completed['CHCKDNY2'] == 'Yes') & (df_completed['CVDINFR4'] == 'Yes')).sum()

print (dual_condition_count)

